'resource:Add to Statistics#Measurement#Add data to statistics#Add Data to Statistics
'state:function=ObjectListState

ActionState.BeginGroupUndo "vt"
call CT()
Sub CT()
	ClsType = ClassifierType (Data.Getvalue ("\Classes\ClassFile"))
	If ClsType = "F" Then
		Data.Setvalue "\StatUI\ChartParams\Axis\X_AxisType", 0
		Data.SetValue "\StatUI\ChartParams\Axis\X_UseValueRange", 0
		bw = Data.Getvalue ("\StatUI\ChartParams\BarWidth")
		Data.SetValue "\StatUI\ChartParams\Axis\X_ScaleFactorValues", bw
		Data.Setvalue "\StatUI\ChartParams\Axis\X_ScaleFactorGrid", bw
	End If
	If GetNameStatObj = "" and ClsType = "A" Then
		key = Application.GetPrivateProfileString(Data.Getvalue ("\Classes\ClassFile"),"KeysInfo","KeysEnum","0")
		Data.Setvalue "\StatUI\ChartParams\Axis\X_ParamKey" ,key
	End If
	gRec = 1
	strOL = GetNameObjectList()
	If ClsType <> "F" Then ClassifyObjectList "", strOL
	str = GetNameStatTable()
	If ClsType <> "F" Then ClassifyObjectList "", str
	test = 1	
	If not IsEmpty (IsNotAVI()) and IsNotAVI()= 0 Then test = 0
	CreateStatTable "", str, 0, 0, test
	sSelect = ObjectGetValue (GetNameStatTable(),"\StatUI\CalcForGroups", "")
	If sSelect <> "" Then
		sSelect = sSelect + "," + cstr(GetStatTable().getGroupCount()-1)
		ObjectSetValue GetStatTable(),"\StatUI\CalcForGroups", sSelect
		Data.Setvalue "\StatUI\CalcForGroups" , sSelect
	else
		Data.Setvalue "\StatUI\CalcForGroups" , "0"
		ObjectSetValue GetStatTable(),"\StatUI\CalcForGroups", "0"
	End If
	If ObjectGetValue (GetNameStatTable(),"\StatUI\CalcForAllClasses", "") = "" Then
		AllClassOn()
		ObjectSetValue GetStatTable(),"\StatUI\CalcForAllClasses", Data.Getvalue ("\StatUI\CalcForAllClasses")
	End If

	Data.Setvalue "\StatCfg\RebuildStat" , 0
	ObjectSetValue GetStatObj(), "\StatCfg\RebuildStat", 0
	
	ObjectSetValue GetNameStatTable(), "\StatCfg\OLName", strOL
	gRec = 0
End Sub
ActionState.EndGroupUndo 1

